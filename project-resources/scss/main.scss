$gridSize:40px;
$objectMaxSize:4;




// $TriangleRandL: "item-1.1" "item-1.2" "item-1.3" "item-1.4", 
//        "item-2.1" "item-2.2" "item-2.3" "item-2.4",
//        "item-3.1" "item-3.2" "item-3.3" "item-3.4",
//        "item-4.1" "item-4.2" "item-4.3" "item-4.4";

$TriangleRandL: 45deg 26.57deg 18.43deg 14.04deg, 
								63.43deg 45deg 33.69deg 26.57deg,
								71.57deg 56.31deg 45deg 36.87deg,
								75.96deg 63.43deg 53.13deg 45deg;

// $TriangleE: 26.57deg 45deg 56.31deg 63.43deg,
// 						14.04deg 26.57deg 36.87deg 45deg,
// 						9.46deg 18.43deg 26.57deg 33.69deg,
// 						7.13deg 14.04deg 20.56deg 26.57deg;


$TriangleE: 26.57deg 14.04deg 9.46deg 7.13deg,
						45deg 26.57deg 18.43deg 14.04deg,
						56.31deg 36.87deg 26.57deg 20.56deg,
						63.43deg 45deg 33.69deg 26.57deg;

body {
  margin: 0;
  /*overflow:hidden;*/
}
#objectContainerWrap {
	/*position:relative;*/
  /*overflow:hidden;*/
  /*height: 250px;*/
  /*padding: 50px 0 50px 0;*/
	/*margin: 50px 0;*/
}
#objectContainer {
	position: relative;
  /*position:absolute;*/
  /*left: 50%;*/
	padding: 0 0 50px 0;
  
}

.menuControls {
	position: fixed;
	z-index: 99999;
	&#leftControl {
		left: 0;
		top: 50%;
	}
	&#rightControl {
		position: fixed;
		z-index: 99999;
		right: 0;
		top: 50%;
	}
	&#topControl {
		position: fixed;
		z-index: 99999;
		left: 50%;
		top: 0;
	}
	&#bottomControl {
		position: fixed;
		z-index: 99999;
		left: 50%;
		bottom: 0;
	}
}

.object {
	position: absolute;
	overflow: hidden;


	@for $width from 1 through $objectMaxSize {
		@for $height from 1 through $objectMaxSize {

			@for $rotation from 0 through 3 {
				
				$objectWidth: $gridSize * $width;
				$objectHeight: $gridSize * $height;
				@if $rotation==1 or $rotation==3 {
					$objectWidth: $gridSize * $height;
					$objectHeight: $gridSize * $width;
				}

			  &.square-#{$width}x#{$height}-#{$rotation} {
			    width: $objectWidth;
			    height: $objectHeight;
			  }

			  $circleRadius: #{$objectWidth/2} / #{$objectHeight/2};

				&.circle-#{$width}x#{$height}-#{$rotation} {
					width: $objectWidth;
			    height: $objectHeight;
			    -webkit-border-radius: $circleRadius;
					-moz-border-radius: $circleRadius;
					border-radius: $circleRadius;
				}
			  
			  $triangleLRDeg : nth(nth($TriangleRandL, $width), $height);

			  &.triangle-L-#{$width}x#{$height}-#{$rotation} {
					// background-color: transparent !important;
					width: $objectWidth;
			    height: $objectHeight;
					>div {
						overflow: hidden;
						width: $objectWidth;
						height: $objectHeight;
						position: absolute;
						top: 0;
						left:$objectWidth/2;
						-webkit-transform: skewX($triangleLRDeg);
						-moz-transform: skewX($triangleLRDeg);
						-o-transform: skewX($triangleLRDeg);
						-ms-transform: skewX($triangleLRDeg);
						transform: skewX($triangleLRDeg);
						>div {
							// width: 100%;
							// height: 100%;
							-webkit-transform: skewX(-$triangleLRDeg);
							-moz-transform: skewX(-$triangleLRDeg);
							-o-transform: skewX(-$triangleLRDeg);
							-ms-transform: skewX(-$triangleLRDeg);
							transform: skewX(-$triangleLRDeg);
						}
					}
				}

				&.triangle-R-#{$width}x#{$height}-#{$rotation} {
					// background-color: transparent !important;
					width: $objectWidth;
			    height: $objectHeight;
					>div {
						overflow: hidden;
						width: 100%;
						height: 200%;
						-webkit-transform: skewX(-$triangleLRDeg);
						-moz-transform: skewX(-$triangleLRDeg);
						-o-transform: skewX(-$triangleLRDeg);
						-ms-transform: skewX(-$triangleLRDeg);
						transform: skewX(-$triangleLRDeg);
						>div {
							// width: 100%;
							// height: 100%;
							-webkit-transform: skewX($triangleLRDeg);
							-moz-transform: skewX($triangleLRDeg);
							-o-transform: skewX($triangleLRDeg);
							-ms-transform: skewX($triangleLRDeg);
							transform: skewX($triangleLRDeg);
						}
					}
				}

				$triangleEDeg : nth(nth($TriangleE, $width), $height);

				&.triangle-E-#{$width}x#{$height}-#{$rotation} {
					// background-color: transparent !important;
					width: $objectWidth;
			    height: $objectHeight;
					>div {
						overflow: hidden;
						width: 100%;
						height: 200%;
						-webkit-transform: skewX(-$triangleEDeg);
						-moz-transform: skewX(-$triangleEDeg);
						-o-transform: skewX(-$triangleEDeg);
						-ms-transform: skewX(-$triangleEDeg);
						transform: skewX(-$triangleEDeg);
						>div {
							overflow: hidden;
							width: 100%;
							height: 100%;
							-webkit-transform: skewX($triangleLRDeg);
							-moz-transform: skewX($triangleLRDeg);
							-o-transform: skewX($triangleLRDeg);
							-ms-transform: skewX($triangleLRDeg);
							transform: skewX($triangleLRDeg);
							>div {
								-webkit-transform: skewX(-$triangleEDeg);
								-moz-transform: skewX(-$triangleEDeg);
								-o-transform: skewX(-$triangleEDeg);
								-ms-transform: skewX(-$triangleEDeg);
								transform: skewX(-$triangleEDeg);
							}
						}
					}
				}


			}


	  }
	}

	&.pacman {
	  width: 0px;
	  height: 0px;
	  // background-color: transparent !important;
	  border-right: ($gridSize * 1.5) solid transparent;
	  border-top: ($gridSize * 1.5) solid yellow;
	  border-left: ($gridSize * 1.5) solid yellow;
	  border-bottom: ($gridSize * 1.5) solid yellow;
	  border-top-left-radius: ($gridSize * 1.5);
	  border-top-right-radius: ($gridSize * 1.5);
	  border-bottom-left-radius: ($gridSize * 1.5);
	  border-bottom-right-radius: ($gridSize * 1.5);
	}

}

.texture {
	width:100%;
	height:100%;
	&.texture-001 { background-image:url(images/texture-001.png); }
	&.texture-002 { background-image:url(images/texture-002.png); }
}






#dynamicAdd {
	position: absolute;
	left: 40px;
	top: 40px;
	width: 50px;
	height:30px;
	margin-left:-25px;
	margin-top:-15px;
}
