$gridSize:40px;
$objectMaxSize:4;




// $TriangleRandL: "item-1.1" "item-1.2" "item-1.3" "item-1.4", 
//        "item-2.1" "item-2.2" "item-2.3" "item-2.4",
//        "item-3.1" "item-3.2" "item-3.3" "item-3.4",
//        "item-4.1" "item-4.2" "item-4.3" "item-4.4";

$TriangleRandL: 45deg 26.56deg 18.43deg 14.04deg, 
								63.43deg 45deg 33.69deg 26.56deg,
								71.56deg 56.30deg 45deg 36.87deg,
								75.96deg 63.43deg 53.13deg 45deg;




body {
  margin: 0;
  /*overflow:hidden;*/
}
#objectContainerWrap {
	/*position:relative;*/
  /*overflow:hidden;*/
  /*height: 250px;*/
  /*padding: 50px 0 50px 0;*/
	/*margin: 50px 0;*/
}
#objectContainer {
	position: relative;
  /*position:absolute;*/
  /*left: 50%;*/
	padding: 0 0 50px 0;
  
}

.menuControls {
	position: fixed;
	z-index: 99999;
	&#leftControl {
		left: 0;
		top: 50%;
	}
	&#rightControl {
		position: fixed;
		z-index: 99999;
		right: 0;
		top: 50%;
	}
	&#topControl {
		position: fixed;
		z-index: 99999;
		left: 50%;
		top: 0;
	}
	&#bottomControl {
		position: fixed;
		z-index: 99999;
		left: 50%;
		bottom: 0;
	}
}

.object {
	position: absolute;

	@for $width from 1 through $objectMaxSize {
		@for $height from 1 through $objectMaxSize {
			
			$objectWidth: $gridSize * $width;
			$objectHeight: $gridSize * $height;

		  &.square-#{$width}x#{$height} {
		    width: $objectWidth;
		    height: $objectHeight;
		  }

		  $circleRadius: #{($gridSize/2) * $width} / #{($gridSize/2) * $height};

			&.circle-#{$width}x#{$height} {
				overflow: hidden;
				width: $objectWidth;
		    height: $objectHeight;
		    -webkit-border-radius: $circleRadius;
				-moz-border-radius: $circleRadius;
				border-radius: $circleRadius;
			}
		  
		  $triangleDeg : nth(nth($TriangleRandL, $width), $height);

		  &.triangle-L-#{$width}x#{$height} {
				overflow: hidden;
				background-color: transparent !important;
				width: $objectWidth;
		    height: $objectHeight;
				>div {
					overflow: hidden;
					width: 100%;
					height: 200%;
					-webkit-transform: skewX($triangleDeg);
					-moz-transform: skewX($triangleDeg);
					-o-transform: skewX($triangleDeg);
					-ms-transform: skewX($triangleDeg);
					transform: skewX($triangleDeg);
					>div {
						width: 100%;
						height: 100%;
						-webkit-transform: skewX(-$triangleDeg);
						-moz-transform: skewX(-$triangleDeg);
						-o-transform: skewX(-$triangleDeg);
						-ms-transform: skewX(-$triangleDeg);
						transform: skewX(-$triangleDeg);
					}
				}
			}

			&.triangle-R-#{$width}x#{$height} {
				overflow: hidden;
				background-color: transparent !important;
				width: $objectWidth;
		    height: $objectHeight;
				>div {
					overflow: hidden;
					width: 100%;
					height: 200%;
					-webkit-transform: skewX(-$triangleDeg);
					-moz-transform: skewX(-$triangleDeg);
					-o-transform: skewX(-$triangleDeg);
					-ms-transform: skewX(-$triangleDeg);
					transform: skewX(-$triangleDeg);
					>div {
						width: 100%;
						height: 100%;
						-webkit-transform: skewX($triangleDeg);
						-moz-transform: skewX($triangleDeg);
						-o-transform: skewX($triangleDeg);
						-ms-transform: skewX($triangleDeg);
						transform: skewX($triangleDeg);
					}
				}
			}



	  }
	}

	&.pacman {
	  width: 0px;
	  height: 0px;
	  // background-color: transparent !important;
	  border-right: ($gridSize * 1.5) solid transparent;
	  border-top: ($gridSize * 1.5) solid yellow;
	  border-left: ($gridSize * 1.5) solid yellow;
	  border-bottom: ($gridSize * 1.5) solid yellow;
	  border-top-left-radius: ($gridSize * 1.5);
	  border-top-right-radius: ($gridSize * 1.5);
	  border-bottom-left-radius: ($gridSize * 1.5);
	  border-bottom-right-radius: ($gridSize * 1.5);
	}

}

.texture {
	width:100%;
	height:100%;
	&.texture-001 { background-image:url(images/texture-001.png); }
	&.texture-002 { background-image:url(images/texture-002.png); }
}






#dynamicAdd {
	position: absolute;
	left: 50%;
	top: 50%;
	width: 50px;
	height:30px;
	margin-left:-25px;
	margin-top:-15px;
}
